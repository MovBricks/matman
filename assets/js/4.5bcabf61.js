(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{294:function(t,s,e){t.exports=e.p+"assets/img/fastest-simple-proxy.c666b1a4.png"},295:function(t,s,e){t.exports=e.p+"assets/img/fastest-front-smart-panel.602d15f2.png"},296:function(t,s,e){t.exports=e.p+"assets/img/fastest-h5-demo.c9aed5d4.gif"},349:function(t,s,e){t.exports=e.p+"assets/img/fastest-old-use-proxy-tool.e7a9bf37.png"},350:function(t,s,e){t.exports=e.p+"assets/img/fastest-many-rules.df7b8a99.png"},373:function(t,s,e){"use strict";e.r(s);var a=e(44),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"和代理工具说再见"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和代理工具说再见"}},[t._v("#")]),t._v(" 和代理工具说再见")]),t._v(" "),a("blockquote",[a("p",[t._v("有了 fastest ，妈妈再也不用担心我不会使用代理了。")])]),t._v(" "),a("p",[t._v("在 "),a("a",{attrs:{href:"http://km.oa.com/articles/show/431384",target:"_blank",rel:"noopener noreferrer"}},[t._v("别了，代理工具——Fastest免代理访问测试环境方案"),a("OutboundLink")],1),t._v(" 一文中，我们初略介绍了 fastest 的情况，本文将从另外一个角度来进一步补充。")]),t._v(" "),a("h2",{attrs:{id:"_1-为何需要代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-为何需要代理"}},[t._v("#")]),t._v(" 1. 为何需要代理")]),t._v(" "),a("p",[t._v("在业界的实践中，项目部署到生产环境之前，一般会先部署一套代码到测试环境（可能还有预发布环境），经过测试验证无误之后，才会发布到生产环境。")]),t._v(" "),a("p",[t._v("因为生产环境配置了域名解析，我们可以直接访问到生产环境，正如我们在浏览器中输入某个网址一样。而要访问测试环境的话，最常用的方式就是借助代理工具（例如 "),a("a",{attrs:{href:"https://www.telerik.com/fiddler",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fiddler"),a("OutboundLink")],1),t._v(" 或者 "),a("a",{attrs:{href:"https://github.com/avwo/whistle",target:"_blank",rel:"noopener noreferrer"}},[t._v("whistle"),a("OutboundLink")],1),t._v(" 等），将请求代理到我们指定的服务器 IP。")]),t._v(" "),a("blockquote",[a("p",[t._v("当然还有其他方式访问测试环境，可阅读 "),a("RouterLink",{attrs:{to:"/wiki/about/proxy-domain.html"}},[t._v("一触即达的代理域名")]),t._v(" 进一步了解。")],1)]),t._v(" "),a("p",[a("img",{attrs:{src:e(349),alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_2-为什么要做-fastest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么要做-fastest"}},[t._v("#")]),t._v(" 2. 为什么要做 fastest")]),t._v(" "),a("p",[t._v("通过代理工具来访问测试环境的原理很简单，但是实际操作起来过程可能会比较复杂，甚至有些场景甚至没法做到。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-使用代理工具操作复杂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-使用代理工具操作复杂"}},[t._v("#")]),t._v(" 2.1 使用代理工具操作复杂")]),t._v(" "),a("p",[t._v("使用代理工具来访问测试环境，可能需要如下几个步骤：")]),t._v(" "),a("p",[t._v("第一步： 安装代理工具（例如 "),a("a",{attrs:{href:"https://www.telerik.com/fiddler",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fiddler"),a("OutboundLink")],1),t._v(" 或者 "),a("a",{attrs:{href:"https://github.com/avwo/whistle",target:"_blank",rel:"noopener noreferrer"}},[t._v("whistle"),a("OutboundLink")],1),t._v(" ）。软件的安装一般没什么问题，但是要调教好工具，却少不了一番设置。例如要抓 https 包，就涉及到证书安装和打开https抓包开关等操作，更别说可能出现的端口冲突等场景，对于非开发而言是一种挑战。")]),t._v(" "),a("p",[t._v("第二步： 配置代理规则。如果测试环境较复杂，那么代理的配置将是一个噩梦，尤其对于产品、视觉等非开发同学，以下提供一份配置，感受下内心的无助。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(350),alt:""}})]),t._v(" "),a("p",[t._v("第三步： 移动端代理的额外配置，当然最重要的是电脑得连入 wifi 网络（windows pc得准备一个网卡），使得手机和电脑在同样的一个网络中，然后需要在手机上设置代理（配置电脑上的代理工具的ip和端口），接着要安装 https 证书（某些安卓机器上可能证书安装会失败，而且每一台接入手机都得安装一次）。而 PC 端则需要安装一些浏览器插件，使得 http 请求走到代理工具启动的端口，才能够被代理。")]),t._v(" "),a("p",[t._v("第四步： 抓包，当然一般是开发或者测试同学会使用。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-代理工具并非万能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-代理工具并非万能"}},[t._v("#")]),t._v(" 2.2 代理工具并非万能")]),t._v(" "),a("p",[t._v("如果说使用代理工具能够满足我们的诉求，那么复杂也就罢了；然而，还有一些特别的场景，根本没法用代理工具来满足。")]),t._v(" "),a("p",[t._v("例如，在调试 hippy 项目时，安卓端由于某些原因，导致无法连接到代理工具；某些 node 服务需要请求测试环境的，也不太可能在服务器上安装代理工具，且设置代理。")]),t._v(" "),a("p",[t._v("例如，与第三方合作方联调开发时，他们无法直接访问到腾讯 idc 机器，也就无法通过代理工具来解决代理的问题。")]),t._v(" "),a("p",[t._v("例如，非 wifi 场景下，无法进行代理配置；有部分产品业务在 wifi 和 4G 场景下是可能有不同的逻辑处理的。")]),t._v(" "),a("h2",{attrs:{id:"_3-我们是如何设计-fastest-方案的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-我们是如何设计-fastest-方案的"}},[t._v("#")]),t._v(" 3. 我们是如何设计 fastest 方案的")]),t._v(" "),a("p",[t._v("对于配置代理才能访问到测试环境，开发同学和测试同学也许并不觉得太糟糕，然而，产品同学要产品体验、视觉同学要UI走查、老板要体验业务，你要让他们（甚至也包括部分开发和测试同学）自己来配置代理才能访问，绝对是一件天大的困难事。")]),t._v(" "),a("blockquote",[a("p",[t._v("要不，你可以试试让你的老板来自己配置代理访问，然后... 嘿嘿")])]),t._v(" "),a("p",[t._v("因此，fastest 方案的最原始的目标，就是简化这件事情：免安装代理工具甚至免代理配置访问测试环境。我们采用了 "),a("code",[t._v("代理域名 + 云代理")]),t._v(" 的方案，即部署一套云代理，然后通过独立的测试域名来进行访问，示意图如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:e(294),alt:""}})]),t._v(" "),a("p",[t._v("如果一来，我们将会告别代理工具，甚至有时候都不需要去设置代理了，直接选择已经配置好的环境即可。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(295),alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:e(296),alt:""}})]),t._v(" "),a("p",[t._v("当然，整套的 fastest 方案不会只是这么简单，我们将在 "),a("RouterLink",{attrs:{to:"/wiki/about/proxy-domain.html"}},[t._v("一触即达的代理域名")]),t._v(" 一文中介绍为什么要使用代理域名及如何选择代理域名。而在 "),a("RouterLink",{attrs:{to:"/wiki/about/admin.html"}},[t._v("统一的云代理配置平台")]),t._v(" 一文，将介绍我们的管理端及如何配置在线代理规则。")],1),t._v(" "),a("p",[t._v("Fastest 代理方案有着 "),a("RouterLink",{attrs:{to:"/wiki/about/platform-support.html"}},[t._v("丰富的多端多平台支持")]),t._v("，并且提供了 "),a("RouterLink",{attrs:{to:"/wiki/about/log.html"}},[t._v("强大的抓包支持")]),t._v("，支持实时抓包和历史抓包的能力。")],1),t._v(" "),a("p",[t._v("而由于测试环境的特殊性，我们还将介绍我们的一些安全策略，确保这是  "),a("RouterLink",{attrs:{to:"/wiki/about/safety.html"}},[t._v("可信赖的安全代理")]),t._v("。")],1),t._v(" "),a("p",[t._v("最后，为了丰富 fastest 方案，我们还涉及了 "),a("RouterLink",{attrs:{to:"/wiki/about/plugins.html"}},[t._v("可扩展的插件体系")]),t._v(" ，通过开发插件来满足一些自定义的功能。")],1)])}),[],!1,null,null,null);s.default=r.exports}}]);