{"version":3,"sources":["../src/run.js"],"names":["fs","require","path","global","Promise","babelCompileDirectory","matmanServer","util","runConfig","logger","matmanLogger","attentionLogger","module","exports","opts","configOpts","getConfigOpts","Error","SRC_PATH","APP_PATH","init","LOG_PATH","info","routerHandler","app","create","middlewares","handlerServer","use","get","req","res","redirect","handlerName","params","name","curDefinedHandler","_handlerParser","getDefinedHandler","staticRelativePath","join","send","sendFile","PATH","__dirname","connectLogger","bodyParser","next","method","body","createdAt","Date","now","server","listen","port","shouldWatch","watch","err","filesModified","dirsModified","missingCreated","fileTimestamps","dirTimestamps","console","log","process","exit"],"mappings":"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","file":"run.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\n//rewrite promise, bluebird is more faster\n// require('babel-runtime/core-js/promise').default = require('bluebird');\nglobal.Promise = require('bluebird');\n\nconst babelCompileDirectory = require('babel-d');\n\nconst matmanServer = require('./server');\nconst util = require('./util');\nconst runConfig = require('./business/run-config');\n\nconst logger = require('./server/logger');\nconst matmanLogger = logger.matmanLogger();\nconst attentionLogger = logger.attentionLogger();\n\n// 暴露一个全局log变量\nglobal.matmanLogger = matmanLogger;\nglobal.attentionLogger = attentionLogger;\n\nmodule.exports = (opts) => {\n  //====================================================================================\n  // 1. 获取配置项\n  //====================================================================================\n  let configOpts = runConfig.getConfigOpts(opts);\n\n  // 如果没法获取配置项，则将无法启动成功\n  if (!configOpts) {\n    throw new Error('Invalid param!');\n  }\n\n  //====================================================================================\n  // 2. babel 编译等预处理\n  //====================================================================================\n  babelCompileDirectory(configOpts.SRC_PATH, configOpts.APP_PATH);\n\n  //====================================================================================\n  // 3. 初始化日志打印\n  //====================================================================================\n  logger.init(configOpts.LOG_PATH);\n  matmanLogger.info(configOpts);\n\n  //====================================================================================\n  // 4. 创建服务，并加入 handler 路由\n  //====================================================================================\n  const routerHandler = matmanServer.routerHandler(configOpts);\n  const app = matmanServer.create();\n  const middlewares = matmanServer.handlerServer();\n\n  // Set default middlewares (logger, static, cors and no-cache)\n  app.use(middlewares);\n\n  //====================================================================================\n  // 5. matman 管理系统中使用的路由配置\n  //====================================================================================\n  // GET /admin，跳转到 /\n  app.get('/admin', function (req, res) {\n    res.redirect('/');\n  });\n\n  // 静态资源的配置\n  // TODO 此处还需要支持 reporter 等场景\n  // GET /admin/mockers/mocker/:name/static/* 静态资源\n  // http://localhost:3000/admin/mockers/mocker/standard_cgi/static/subdir/3.png\n  app.get('/admin/mockers/mocker/:name/static/*', (req, res) => {\n    // req.params[0] = 'subdir/3.png'\n    // req.params.name = 'standard_cgi'\n\n    let handlerName = req.params.name;\n    let curDefinedHandler = routerHandler._handlerParser.getDefinedHandler(handlerName);\n    let staticRelativePath = path.join('static', req.params[0]);\n\n    if (!curDefinedHandler) {\n      res.send(`Can not find ${path.join(handlerName, staticRelativePath)}`);\n    } else {\n      res.sendFile(path.join(curDefinedHandler.PATH, staticRelativePath));\n    }\n\n  });\n\n  // 单页应用，因此只要是 /admin/* 的都加载静态html页面\n  // GET /admin/*\n  app.get('/admin/*', function (req, res) {\n    // res.jsonp({ url2: req.url });\n    res.sendFile(path.join(__dirname, '../www/static', 'index.html'));\n  });\n\n  // 日志打印模块\n  app.use(logger.connectLogger());\n\n  // To handle POST, PUT and PATCH you need to use a body-parser\n  // You can use the one used by JSON Server\n  app.use(matmanServer.bodyParser);\n  app.use((req, res, next) => {\n    if (req.method === 'POST') {\n      req.body.createdAt = Date.now();\n    }\n    // Continue to JSON Server router\n    next();\n  });\n\n  // Use handler router\n  app.use(routerHandler);\n\n  // 触发 onBeforeServerListen 事件\n  const server = require('./plugins/stub/websocket')(configOpts, app, routerHandler._handlerParser);\n\n  server.listen(configOpts.port || 3000, () => {\n    matmanLogger.info('matman server is running');\n\n    if (configOpts.shouldWatch) {\n      matmanLogger.info('watching files...');\n\n      util.watch([], [configOpts.SRC_PATH], [], {}, function (err, filesModified, dirsModified, missingCreated, fileTimestamps, dirTimestamps) {\n        console.log('文件变化了，需要重启！');\n        process.exit(1);\n      });\n    }\n  });\n};"]}