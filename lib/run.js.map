{"version":3,"sources":["../src/run.js"],"names":["fs","require","path","default","global","Promise","matmanServer","logger","matmanLogger","attentionLogger","module","exports","opts","configOpts","existsSync","ROOT_PATH","console","error","SRC_PATH","join","APP_PATH","DATA_PATH","HANDLER_RELATIVE_PATH","LOG_PATH","port","HANDLER_PATH","init","info","routerHandler","app","create","middlewares","handlerServer","use","get","req","res","redirect","imageFilePath","params","handlerName","sendfile","sendFile","__dirname","connectLogger","bodyParser","next","method","body","createdAt","Date","now","server","_handlerParser","listen","log"],"mappings":"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","file":"run.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\n//rewrite promise, bluebird is more faster\nrequire('babel-runtime/core-js/promise').default = require('bluebird');\nglobal.Promise = require('bluebird');\n\n// const babelCompileDirectory = require('babel-d');\n\nconst matmanServer = require('./server');\n\nconst logger = require('./server/logger');\nconst matmanLogger = logger.matmanLogger();\nconst attentionLogger = logger.attentionLogger();\n\n// 暴露一个全局log变量\nglobal.matmanLogger = matmanLogger;\nglobal.attentionLogger = attentionLogger;\n\nmodule.exports = (opts) => {\n  let configOpts;\n\n  if (typeof opts === 'string' && fs.existsSync(opts)) {\n    configOpts = require(opts);\n  } else if (typeof opts === 'object') {\n    configOpts = opts;\n  }\n\n  if (!configOpts || !configOpts.ROOT_PATH) {\n    console.error('Params error!', opts, configOpts);\n    return;\n  }\n\n  // 设置默认值\n  configOpts.SRC_PATH = configOpts.SRC_PATH || path.join(configOpts.ROOT_PATH, './src');\n  configOpts.APP_PATH = configOpts.APP_PATH || path.join(configOpts.ROOT_PATH, './app');\n  configOpts.DATA_PATH = configOpts.DATA_PATH || path.join(configOpts.ROOT_PATH, './data');\n  configOpts.HANDLER_RELATIVE_PATH = configOpts.HANDLER_RELATIVE_PATH || './handler';\n  configOpts.LOG_PATH = configOpts.LOG_PATH || path.join(configOpts.ROOT_PATH, 'logs');\n  configOpts.port = configOpts.port || 3000;\n\n  // 确认 HANDLER_PATH 的值\n  // if (configOpts.SRC_PATH === configOpts.APP_PATH) {\n  // 如果源文件目录和运行目录一致，就不进行babel编译了\n  configOpts.HANDLER_PATH = path.join(configOpts.SRC_PATH, configOpts.HANDLER_RELATIVE_PATH);\n  // } else {\n  //   // babel 编译\n  //   babelCompileDirectory(configOpts.SRC_PATH, configOpts.APP_PATH);\n  //   configOpts.HANDLER_PATH = path.join(configOpts.APP_PATH, configOpts.HANDLER_RELATIVE_PATH);\n  // }\n\n  // 初始化日志打印\n  logger.init(configOpts.LOG_PATH);\n  matmanLogger.info(configOpts);\n\n  // 创建服务，并加入 handler 路由\n  const routerHandler = matmanServer.routerHandler(configOpts);\n  const app = matmanServer.create();\n  const middlewares = matmanServer.handlerServer();\n\n  // Set default middlewares (logger, static, cors and no-cache)\n  app.use(middlewares);\n\n  // GET /admin，跳转到 /\n  app.get('/admin', function (req, res) {\n    res.redirect('/');\n  });\n\n  // GET /admin/handlers/handler/:handlerName/static/* 静态资源\n  // http://localhost:3000/admin/handlers/handler/standard_cgi/static/1.png\n  app.get('/admin/handlers/handler/:handlerName/static/*', (req, res) => {\n    // req.params[0] = 'subdir/3.png'\n    // req.params.handlerName = 'standard_cgi'\n    let imageFilePath = path.join(configOpts.HANDLER_PATH, req.params.handlerName, 'static', req.params[0]);\n    res.sendfile(imageFilePath);\n  });\n\n  // GET /admin/*\n  app.get('/admin/*', function (req, res) {\n    // res.jsonp({ url2: req.url });\n    res.sendFile(path.join(__dirname, '../www/static', 'index.html'));\n  });\n\n  app.use(logger.connectLogger());\n\n  // To handle POST, PUT and PATCH you need to use a body-parser\n  // You can use the one used by JSON Server\n  app.use(matmanServer.bodyParser);\n  app.use((req, res, next) => {\n    if (req.method === 'POST') {\n      req.body.createdAt = Date.now();\n    }\n    // Continue to JSON Server router\n    next();\n  });\n\n  // Use handler router\n  app.use(routerHandler);\n\n  // 触发 onBeforeServerListen 事件\n  const server = require('./plugins/stub/websocket')(configOpts, app, routerHandler._handlerParser);\n\n  server.listen(configOpts.port || 3000, () => {\n    console.log('matman server is running');\n    matmanLogger.info('matman server is running');\n  });\n};"]}