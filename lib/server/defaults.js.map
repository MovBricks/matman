{"version":3,"sources":["../../src/server/defaults.js"],"names":["fs","require","path","express","logger","cors","compression","errorhandler","objectAssign","module","exports","opts","userDir","join","process","cwd","defaultDir","__dirname","staticDir","existsSync","static","arr","noGzip","push","skip","req","env","NODE_ENV","noCors","origin","credentials","res","next","header","readOnly","method","sendStatus"],"mappings":";;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,UAAUF,QAAQ,SAAR,CAAhB;AACA,IAAMG,SAASH,QAAQ,QAAR,CAAf;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,cAAcL,QAAQ,aAAR,CAApB;AACA,IAAMM,eAAeN,QAAQ,cAAR,CAArB;AACA,IAAMO,eAAeP,QAAQ,eAAR,CAArB;;AAEAQ,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,MAAMC,UAAUV,KAAKW,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyB,QAAzB,CAAhB;AACA,MAAMC,aAAad,KAAKW,IAAL,CAAUI,SAAV,EAAqB,QAArB,CAAnB;AACA,MAAMC,YAAYlB,GAAGmB,UAAH,CAAcP,OAAd,IACdA,OADc,GAEdI,UAFJ;;AAIAL,SAAOH,aAAa,EAAEJ,QAAQ,IAAV,EAAgBgB,QAAQF,SAAxB,EAAb,EAAkDP,IAAlD,CAAP;;AAEA,MAAMU,MAAM,EAAZ;;AAEA;AACA,MAAI,CAACV,KAAKW,MAAV,EAAkB;AAChBD,QAAIE,IAAJ,CAASjB,aAAT;AACD;;AAED;AACA,MAAIK,KAAKP,MAAT,EAAiB;AACfiB,QAAIE,IAAJ,CACEnB,OAAO,KAAP,EAAc;AACZoB,YAAM,cAACC,GAAD;AAAA,eACJX,QAAQY,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IACAF,IAAIvB,IAAJ,KAAa,cAFT;AAAA;AADM,KAAd,CADF;AAQD;;AAED;AACA,MAAI,CAACS,KAAKiB,MAAV,EAAkB;AAChBP,QAAIE,IAAJ,CAASlB,KAAK,EAAEwB,QAAQ,IAAV,EAAgBC,aAAa,IAA7B,EAAL,CAAT;AACD;;AAED,MAAIhB,QAAQY,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C;AACAN,QAAIE,IAAJ,CAAShB,cAAT;AACD;;AAED;AACAc,MAAIE,IAAJ,CAASpB,QAAQiB,MAAR,CAAeT,KAAKS,MAApB,CAAT;;AAEA;AACA;AACAC,MAAIE,IAAJ,CAAS,UAACE,GAAD,EAAMM,GAAN,EAAWC,IAAX,EAAoB;AAC3BD,QAAIE,MAAJ,CAAW,eAAX,EAA4B,UAA5B;AACAF,QAAIE,MAAJ,CAAW,QAAX,EAAqB,UAArB;AACAF,QAAIE,MAAJ,CAAW,SAAX,EAAsB,IAAtB;AACAD;AACD,GALD;;AAOA;AACA,MAAIrB,KAAKuB,QAAT,EAAmB;AACjBb,QAAIE,IAAJ,CAAS,UAACE,GAAD,EAAMM,GAAN,EAAWC,IAAX,EAAoB;AAC3B,UAAIP,IAAIU,MAAJ,KAAe,KAAnB,EAA0B;AACxBH,eADwB,CAChB;AACT,OAFD,MAEO;AACLD,YAAIK,UAAJ,CAAe,GAAf,EADK,CACgB;AACtB;AACF,KAND;AAOD;;AAED,SAAOf,GAAP;AACD,CA9DD","file":"defaults.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst express = require('express');\nconst logger = require('morgan');\nconst cors = require('cors');\nconst compression = require('compression');\nconst errorhandler = require('errorhandler');\nconst objectAssign = require('object-assign');\n\nmodule.exports = function (opts) {\n  const userDir = path.join(process.cwd(), 'public');\n  const defaultDir = path.join(__dirname, 'public');\n  const staticDir = fs.existsSync(userDir)\n    ? userDir\n    : defaultDir;\n\n  opts = objectAssign({ logger: true, static: staticDir }, opts);\n\n  const arr = [];\n\n  // Compress all requests\n  if (!opts.noGzip) {\n    arr.push(compression());\n  }\n\n  // Logger\n  if (opts.logger) {\n    arr.push(\n      logger('dev', {\n        skip: (req) => (\n          process.env.NODE_ENV === 'test' ||\n          req.path === '/favicon.ico'\n        )\n      })\n    );\n  }\n\n  // Enable CORS for all the requests, including static files\n  if (!opts.noCors) {\n    arr.push(cors({ origin: true, credentials: true }));\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // only use in development\n    arr.push(errorhandler());\n  }\n\n  // Serve static files\n  arr.push(express.static(opts.static));\n\n  // No cache for IE\n  // https://support.microsoft.com/en-us/kb/234067\n  arr.push((req, res, next) => {\n    res.header('Cache-Control', 'no-cache');\n    res.header('Pragma', 'no-cache');\n    res.header('Expires', '-1');\n    next();\n  });\n\n  // Read-only\n  if (opts.readOnly) {\n    arr.push((req, res, next) => {\n      if (req.method === 'GET') {\n        next(); // Continue\n      } else {\n        res.sendStatus(403); // Forbidden\n      }\n    });\n  }\n\n  return arr;\n};\n"]}