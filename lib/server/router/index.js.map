{"version":3,"sources":["../../../src/server/router/index.js"],"names":["express","require","methodOverride","_","lodashId","low","fileAsync","bodyParser","validateData","plural","nested","singular","mixins","module","exports","source","router","Router","use","db","isObject","setState","storage","getState","mixin","render","req","res","jsonp","locals","data","get","forEach","value","key","isPlainObject","isArray","msg","Error","status","err","next","console","error","stack","send"],"mappings":"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","file":"index.js","sourcesContent":["const express = require('express');\nconst methodOverride = require('method-override');\nconst _ = require('lodash');\nconst lodashId = require('lodash-id');\nconst low = require('lowdb');\nconst fileAsync = require('lowdb/lib/storages/file-async');\nconst bodyParser = require('../body-parser');\nconst validateData = require('./validate-data');\nconst plural = require('./plural');\nconst nested = require('./nested');\nconst singular = require('./singular');\nconst mixins = require('../mixins');\n\nmodule.exports = (source) => {\n  // Create router\n  const router = express.Router();\n\n  // Add middlewares\n  router.use(methodOverride());\n  router.use(bodyParser);\n\n  // Create database\n  let db;\n  if (_.isObject(source)) {\n    db = low();\n    db.setState(source)\n  } else {\n    db = low(source, { storage: fileAsync })\n  }\n\n  validateData(db.getState());\n\n  // Add lodash-id methods to db\n  db._.mixin(lodashId);\n\n  // Add specific mixins\n  db._.mixin(mixins);\n\n  // Expose database\n  router.db = db;\n\n  // Expose render\n  router.render = (req, res) => {\n    res.jsonp(res.locals.data)\n  };\n\n  // GET /db\n  router.get('/db', (req, res) => {\n    res.jsonp(db.getState())\n  });\n\n  // Handle /:parent/:parentId/:resource\n  router.use(nested());\n\n  // Create routes\n  db.forEach((value, key) => {\n    if (_.isPlainObject(value)) {\n      router.use(`/${key}`, singular(db, key));\n      return;\n    }\n\n    if (_.isArray(value)) {\n      router.use(`/${key}`, plural(db, key));\n      return;\n    }\n\n    const msg =\n      `Type of \"${key}\" (${typeof value}) ` +\n      (_.isObject(source) ? '' : `in ${source}`) + ' is not supported. ' +\n      'Use objects or arrays of objects.';\n\n    throw new Error(msg);\n  }).value();\n\n  router.use((req, res) => {\n    if (!res.locals.data) {\n      res.status(404)\n      res.locals.data = {}\n    }\n\n    router.render(req, res)\n  });\n\n  router.use((err, req, res, next) => {\n    console.error(err.stack);\n    res.status(500).send(err.stack);\n  });\n\n  return router\n};\n"]}