{"version":3,"sources":["../../../src/server/router-stub/index.js"],"names":["express","require","methodOverride","_","bodyParser","business","module","exports","entry","stubList","getStubList","STUB_PATH","router","Router","use","render","req","res","jsonp","locals","data","get","result","getStub","params","stubName","html","getStubReadme","post","updateStub","body","all","next","err","console","error","stack","status","send"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,iBAAiBD,QAAQ,iBAAR,CAAvB;AACA,IAAME,IAAIF,QAAQ,QAAR,CAAV;AACA,IAAMG,aAAaH,QAAQ,gBAAR,CAAnB;AACA,IAAMI,WAAWJ,QAAQ,0BAAR,CAAjB;;AAEAK,OAAOC,OAAP,GAAiB,UAACC,KAAD,EAAW;AAC1B,MAAIC,WAAWJ,SAASK,WAAT,CAAqBF,MAAMG,SAA3B,CAAf;;AAEA;AACA;AACA,MAAMC,SAASZ,QAAQa,MAAR,EAAf;;AAEA;AACAD,SAAOE,GAAP,CAAWZ,gBAAX;AACAU,SAAOE,GAAP,CAAWV,UAAX;;AAEA;AACAQ,SAAOG,MAAP,GAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,QAAIC,KAAJ,CAAUD,IAAIE,MAAJ,CAAWC,IAArB;AACD,GAFD;;AAIA;AACAR,SAAOS,GAAP,CAAW,eAAX,EAA4B,UAACL,GAAD,EAAMC,GAAN,EAAc;AACxCR,eAAWJ,SAASK,WAAT,CAAqBF,MAAMG,SAA3B,CAAX;;AAEAM,QAAIC,KAAJ,CAAUT,QAAV;AACD,GAJD;;AAMA;AACAG,SAAOS,GAAP,CAAW,yBAAX,EAAsC,UAACL,GAAD,EAAMC,GAAN,EAAc;AAClD,QAAIK,SAASjB,SAASkB,OAAT,CAAiBf,MAAMG,SAAvB,EAAkCK,IAAIQ,MAAJ,CAAWC,QAA7C,CAAb;;AAEAR,QAAIC,KAAJ,CAAUI,MAAV;AACD,GAJD;;AAMA;AACAV,SAAOS,GAAP,CAAW,gCAAX,EAA6C,UAACL,GAAD,EAAMC,GAAN,EAAc;AACzDA,QAAIC,KAAJ,CAAU;AACRQ,YAAMrB,SAASsB,aAAT,CAAuBnB,MAAMG,SAA7B,EAAwCK,IAAIQ,MAAJ,CAAWC,QAAnD;AADE,KAAV;AAGD,GAJD;;AAMA;AACAb,SAAOgB,IAAP,CAAY,yBAAZ,EAAuC,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACnD,QAAIK,SAASjB,SAASwB,UAAT,CAAoBrB,MAAMG,SAA1B,EAAqCK,IAAIQ,MAAJ,CAAWC,QAAhD,EAA0DT,IAAIc,IAA9D,CAAb;;AAEAb,QAAIC,KAAJ,CAAUI,MAAV;AACD,GAJD;;AAMA;AACAV,SAAOmB,GAAP,CAAW,GAAX,EAAgB,UAAUf,GAAV,EAAeC,GAAf,EAAoBe,IAApB,EAA0B;AACxCA;AACD,GAFD;;AAIApB,SAAOE,GAAP,CAAW,UAACmB,GAAD,EAAMjB,GAAN,EAAWC,GAAX,EAAgBe,IAAhB,EAAyB;AAClCE,YAAQC,KAAR,CAAcF,IAAIG,KAAlB;AACAnB,QAAIoB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,IAAIG,KAAzB;AACD,GAHD;;AAKA,SAAOxB,MAAP;AACD,CAvDD","file":"index.js","sourcesContent":["const express = require('express');\nconst methodOverride = require('method-override');\nconst _ = require('lodash');\nconst bodyParser = require('../body-parser');\nconst business = require('../../websocket/business');\n\nmodule.exports = (entry) => {\n  let stubList = business.getStubList(entry.STUB_PATH);\n\n  // Create router\n  // http://expressjs.com/en/4x/api.html#router\n  const router = express.Router();\n\n  // Add middlewares\n  router.use(methodOverride());\n  router.use(bodyParser);\n\n  // Expose render\n  router.render = (req, res) => {\n    res.jsonp(res.locals.data)\n  };\n\n  // GET /sys-cgi/stub 所有的 stub 列表信息\n  router.get('/sys-cgi/stub', (req, res) => {\n    stubList = business.getStubList(entry.STUB_PATH);\n\n    res.jsonp(stubList);\n  });\n\n  // GET /sys-cgi/stub/:stubName 获得这个 stub 的信息\n  router.get('/sys-cgi/stub/:stubName', (req, res) => {\n    let result = business.getStub(entry.STUB_PATH, req.params.stubName);\n\n    res.jsonp(result);\n  });\n\n  // GET /sys-cgi/stub/:stubName/readme 获得这个 stub 的readme信息\n  router.get('/sys-cgi/stub/:stubName/readme', (req, res) => {\n    res.jsonp({\n      html: business.getStubReadme(entry.STUB_PATH, req.params.stubName)\n    });\n  });\n\n  // POST /sys-cgi/stub/:stubName 设置这个stub的信息\n  router.post('/sys-cgi/stub/:stubName', (req, res) => {\n    let result = business.updateStub(entry.STUB_PATH, req.params.stubName, req.body);\n\n    res.jsonp(result);\n  });\n\n  // 所有的请求都会经过这里，可以做一些类似权限控制的事情\n  router.all('*', function (req, res, next) {\n    next();\n  });\n\n  router.use((err, req, res, next) => {\n    console.error(err.stack);\n    res.status(500).send(err.stack);\n  });\n\n  return router;\n};\n"]}