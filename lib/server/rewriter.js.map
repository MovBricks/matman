{"version":3,"sources":["../../src/server/rewriter.js"],"names":["express","require","url","_","updateQueryString","target","sourceUrl","indexOf","assign","parse","query","module","exports","routes","router","Router","get","req","res","json","forEach","route","all","next","param","params","replace"],"mappings":";;;;;;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,IAAME,IAAIF,QAAQ,QAAR,CAAV;;AAEA,SAASG,iBAAT,CAA2BC,MAA3B,EAAmCC,SAAnC,EAA8C;AAC5C,SAAO,CAACA,UAAUC,OAAV,CAAkB,GAAlB,CAAD,GAA0BJ,EAAEK,MAAF,CAASH,MAAT,EAAiBH,IAAIO,KAAJ,CAAUH,SAAV,EAAqB,IAArB,EAA2BI,KAA5C,CAA1B,GAA+E,EAAtF;AACD;;AAEDC,OAAOC,OAAP,GAAiB,UAACC,MAAD,EAAY;AAC3B,MAAMC,SAASd,QAAQe,MAAR,EAAf;;AAEAD,SAAOE,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCA,QAAIC,IAAJ,CAASN,MAAT;AACD,GAFD;;AAIA,sBAAYA,MAAZ,EAAoBO,OAApB,CAA4B,UAACC,KAAD,EAAW;AACrC,QAAIA,MAAMd,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC7BO,aAAOQ,GAAP,CAAWD,KAAX,EAAkB,UAACJ,GAAD,EAAMC,GAAN,EAAWK,IAAX,EAAoB;AACpC;AACA,YAAIlB,SAASQ,OAAOQ,KAAP,CAAb;AACA,aAAK,IAAIG,KAAT,IAAkBP,IAAIQ,MAAtB,EAA8B;AAC5BpB,mBAASA,OAAOqB,OAAP,CAAe,MAAMF,KAArB,EAA4BP,IAAIQ,MAAJ,CAAWD,KAAX,CAA5B,CAAT;AACD;AACDP,YAAIf,GAAJ,GAAUG,MAAV;AACAY,YAAIP,KAAJ,GAAYN,kBAAkBa,IAAIP,KAAtB,EAA6BO,IAAIf,GAAjC,CAAZ;AACAqB;AACD,OATD;AAUD,KAXD,MAWO;AACLT,aAAOQ,GAAP,CAAWD,QAAQ,GAAnB,EAAwB,UAACJ,GAAD,EAAMC,GAAN,EAAWK,IAAX,EAAoB;AAC1C;AACAN,YAAIf,GAAJ,GAAUe,IAAIf,GAAJ,CAAQwB,OAAR,CAAgBL,KAAhB,EAAuBR,OAAOQ,KAAP,CAAvB,CAAV;AACAJ,YAAIP,KAAJ,GAAYN,kBAAkBa,IAAIP,KAAtB,EAA6BO,IAAIf,GAAjC,CAAZ;AACAqB;AACD,OALD;AAMD;AACF,GApBD;;AAsBA,SAAOT,MAAP;AACD,CA9BD","file":"rewriter.js","sourcesContent":["const express = require('express');\nconst url = require('url');\nconst _ = require('lodash');\n\nfunction updateQueryString(target, sourceUrl) {\n  return ~sourceUrl.indexOf('?') ? _.assign(target, url.parse(sourceUrl, true).query) : {};\n}\n\nmodule.exports = (routes) => {\n  const router = express.Router();\n\n  router.get('/__rules', (req, res) => {\n    res.json(routes)\n  });\n\n  Object.keys(routes).forEach((route) => {\n    if (route.indexOf(':') !== -1) {\n      router.all(route, (req, res, next) => {\n        // Rewrite target url using params\n        let target = routes[route];\n        for (let param in req.params) {\n          target = target.replace(':' + param, req.params[param])\n        }\n        req.url = target\n        req.query = updateQueryString(req.query, req.url);\n        next()\n      })\n    } else {\n      router.all(route + '*', (req, res, next) => {\n        // Rewrite url by replacing prefix\n        req.url = req.url.replace(route, routes[route]);\n        req.query = updateQueryString(req.query, req.url);\n        next()\n      })\n    }\n  });\n\n  return router\n};\n"]}