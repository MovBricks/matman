{"version":3,"sources":["../../src/util/NodeWatchFileSystem.js"],"names":["Watchpack","require","objectToMap","obj","map","key","NodeWatchFileSystem","inputFileSystem","watcherOptions","aggregateTimeout","watcher","watch","files","dirs","missing","startTime","options","callback","callbackUndelayed","Array","isArray","Error","oldWatcher","once","changes","removals","concat","purge","times","getTimes","filter","includes","file","sort","close","pause","getFileTimestamps","getContextTimestamps","module","exports"],"mappings":"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","file":"NodeWatchFileSystem.js","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n'use strict';\n\nconst Watchpack = require('watchpack');\n\n// const objectToMap = require(\"../util/objectToMap\");\n\nfunction objectToMap(obj) {\n  return new Map(Object.keys(obj).map(key => [key, obj[key]]));\n};\n\nclass NodeWatchFileSystem {\n  constructor(inputFileSystem) {\n    this.inputFileSystem = inputFileSystem;\n    this.watcherOptions = {\n      aggregateTimeout: 0\n    };\n    this.watcher = new Watchpack(this.watcherOptions);\n  }\n\n  watch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n    if (!Array.isArray(files)) throw new Error('Invalid arguments: \\'files\\'');\n    if (!Array.isArray(dirs)) throw new Error('Invalid arguments: \\'dirs\\'');\n    if (!Array.isArray(missing))\n      throw new Error('Invalid arguments: \\'missing\\'');\n    if (typeof callback !== 'function')\n      throw new Error('Invalid arguments: \\'callback\\'');\n    if (typeof startTime !== 'number' && startTime)\n      throw new Error('Invalid arguments: \\'startTime\\'');\n    if (typeof options !== 'object')\n      throw new Error('Invalid arguments: \\'options\\'');\n    if (typeof callbackUndelayed !== 'function' && callbackUndelayed)\n      throw new Error('Invalid arguments: \\'callbackUndelayed\\'');\n    const oldWatcher = this.watcher;\n    this.watcher = new Watchpack(options);\n\n    if (callbackUndelayed) this.watcher.once('change', callbackUndelayed);\n\n    this.watcher.once('aggregated', (changes, removals) => {\n      changes = changes.concat(removals);\n      if (this.inputFileSystem && this.inputFileSystem.purge) {\n        this.inputFileSystem.purge(changes);\n      }\n      const times = objectToMap(this.watcher.getTimes());\n      callback(\n        null,\n        changes.filter(file => files.includes(file)).sort(),\n        changes.filter(file => dirs.includes(file)).sort(),\n        changes.filter(file => missing.includes(file)).sort(),\n        times,\n        times\n      );\n    });\n\n    this.watcher.watch(files.concat(missing), dirs.concat(missing), startTime);\n\n    if (oldWatcher) {\n      oldWatcher.close();\n    }\n    return {\n      close: () => {\n        if (this.watcher) {\n          this.watcher.close();\n          this.watcher = null;\n        }\n      },\n      pause: () => {\n        if (this.watcher) {\n          this.watcher.pause();\n        }\n      },\n      getFileTimestamps: () => {\n        if (this.watcher) return objectToMap(this.watcher.getTimes());\n        else return new Map();\n      },\n      getContextTimestamps: () => {\n        if (this.watcher) return objectToMap(this.watcher.getTimes());\n        else return new Map();\n      }\n    };\n  }\n}\n\nmodule.exports = NodeWatchFileSystem;\n"]}