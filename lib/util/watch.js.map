{"version":3,"sources":["../../src/util/watch.js"],"names":["NodeWatchFileSystem","require","watch","files","dirs","missing","options","callback","startTime","Date","getTime","wfs","aggregateTimeout","watcherCallback","err","filesModified","dirsModified","missingCreated","fileTimestamps","dirTimestamps","debug","console","log","watcher","close","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,sBAAsBC,QAAQ,uBAAR,CAA5B;;AAEA;;;;;;;;AAQA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,OAA5B,EAA6D;AAAA,MAAxBC,OAAwB,uEAAd,EAAc;AAAA,MAAVC,QAAU;;AAC3D,MAAMC,YAAY,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,MAAMC,MAAM,IAAIX,mBAAJ,EAAZ;;AAEA;AACAM,YAAU,sBAAc;AACtB;AACAM,sBAAkB;AAFI,GAAd,EAGPN,OAHO,CAAV;;AAKA,MAAMO,kBAAkB,SAAlBA,eAAkB,CAAUC,GAAV,EAAeC,aAAf,EAA8BC,YAA9B,EAA4CC,cAA5C,EAA4DC,cAA5D,EAA4EC,aAA5E,EAA2F;AACjH,QAAIb,QAAQc,KAAZ,EAAmB;AACjBC,cAAQC,GAAR,CAAY,iBAAZ,EAA+BR,GAA/B,EAAoCC,aAApC,EAAmDC,YAAnD,EAAiEC,cAAjE,EAAiFC,cAAjF,EAAiGC,aAAjG;AACD;;AAED,QAAIL,GAAJ,EAAS;AACP,YAAMA,GAAN;AACD;;AAED,QAAI,OAAOP,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,eAASO,GAAT,EAAcC,aAAd,EAA6BC,YAA7B,EAA2CC,cAA3C,EAA2DC,cAA3D,EAA2EC,aAA3E;AACD;;AAEDI,YAAQC,KAAR;AACD,GAdD;;AAgBA,MAAMD,UAAUZ,IAAIT,KAAJ,CAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCG,SAAhC,EAA2CF,OAA3C,EAAoDO,eAApD,CAAhB;AACD;;AAEDY,OAAOC,OAAP,GAAiBxB,KAAjB","file":"watch.js","sourcesContent":["const NodeWatchFileSystem = require('./NodeWatchFileSystem');\n\n/**\n * 监听文件及文件夹变化\n * @param {Array} files 监听的文件列表数组\n * @param {Array} dirs 监听的文件夹列表数组\n * @param {Array} missing 不监听的文件列表\n * @param {Object} [options] 额外参数\n * @param {Function} callback 回调\n */\nfunction watch(files, dirs, missing, options = {}, callback) {\n  const startTime = new Date().getTime();\n  const wfs = new NodeWatchFileSystem();\n\n  // 合并选项\n  options = Object.assign({\n    // Delay the rebuilt after the first change. Value is a time in ms.\n    aggregateTimeout: 1000\n  }, options);\n\n  const watcherCallback = function (err, filesModified, dirsModified, missingCreated, fileTimestamps, dirTimestamps) {\n    if (options.debug) {\n      console.log('[watch] change!', err, filesModified, dirsModified, missingCreated, fileTimestamps, dirTimestamps);\n    }\n\n    if (err) {\n      throw err;\n    }\n\n    if (typeof callback === 'function') {\n      callback(err, filesModified, dirsModified, missingCreated, fileTimestamps, dirTimestamps);\n    }\n\n    watcher.close();\n  };\n\n  const watcher = wfs.watch(files, dirs, missing, startTime, options, watcherCallback);\n}\n\nmodule.exports = watch;"]}